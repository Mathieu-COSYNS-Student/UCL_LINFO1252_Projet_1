# LINFO1252 - Projet 1
#
# Authors :
#		Groupe 15 (Mercredi)
#		- Mathieu Cosyns - 86032100
#		- Brandon Ngoran Ntam - 41481800
#
# Commands :
#		make
#			compile all programs into the bin folder
#		make benchmark
#			run benchmark
#		make benchmark-post
#			run post-processor for raw benchmark files (.csv)
#		make clean
#			remove everything generated by this make file


# UTILS
not-containing = $(foreach v,$2,$(if $(findstring $1,$v),,$v))

# GOBAL
BIN							:=	bin
SRC							:=	src

# Utils
UTILS_POSIX					:=	$(SRC)/part1/utils.c
UTILS_TEST_AND_SET			:=	$(SRC)/part2/utils.c $(patsubst %.c,%.o,$(call not-containing,test,$(wildcard $(SRC)/part2/tache2_4/*.c))) $(patsubst %.c,%.o,$(wildcard $(SRC)/part2/tache2_1/*.c))
UTILS_TEST_AND_TEST_AND_SET	:=	$(SRC)/part2/utils.c $(patsubst %.c,%.o,$(call not-containing,test,$(wildcard $(SRC)/part2/tache2_4/*.c))) $(patsubst %.c,%.o,$(wildcard $(SRC)/part2/tache2_3/*.c))

# Tache 1.1
PHILOSOPHES_1				:=	$(BIN)/philosophes_1
PHILOSOPHES_MAIN			:=	$(SRC)/part1/tache1_1/philosophes.c

# Tache 1.2
PRODUCTEURS_CONSOMMATEURS_1	:=	$(BIN)/producteurs_consommateurs_1
PRODUCTEURS_CONSOMMATEURS_MAIN	:=	$(SRC)/part1/tache1_2/producteurs_consommateurs.c

# Tache 1.3
READERS_WRITERS_1			:=	$(BIN)/readers_writers_1
READERS_WRITERS_MAIN		:=	$(SRC)/part1/tache1_3/readers_writers.c

# Tache 2.1 + 2.2
LOCK_TEST_1					:=	$(BIN)/lock_test_1
LOCK_TEST_MAIN				:=	$(SRC)/part2/tache2_2/lock_test.c

# Tache 2.3 + 2.2
LOCK_TEST_2					:=	$(BIN)/lock_test_2

# Tache 2.4
SEMAPHORE_TEST				:=	$(BIN)/semaphore_test
SEMAPHORE_TEST_MAIN			:=	$(SRC)/part2/tache2_4/semaphore_test.c

# Tache 2.5
#	- Adaptation de la tache 1.1
PHILOSOPHES_2				:=	$(BIN)/philosophes_2
PHILOSOPHES_3				:=	$(BIN)/philosophes_3

#	- Adaptation de la tache 1.2
PRODUCTEURS_CONSOMMATEURS_2	:=	$(BIN)/producteurs_consommateurs_2
PRODUCTEURS_CONSOMMATEURS_3	:=	$(BIN)/producteurs_consommateurs_3

#	- Adaptation de la tache 1.3
READERS_WRITERS_2			:=	$(BIN)/readers_writers_2
READERS_WRITERS_3			:=	$(BIN)/readers_writers_3

CC							:=	gcc
CFLAGS						:=	-pedantic -Wvla -Wall -Werror
LDFLAGS						:=	-pthread

FLAGS						:=	$(CFLAGS) $(LDFLAGS)

PHONY						:=	all clean benchmark benchmark-post $(BIN)

all: $(PHILOSOPHES_1) \
	$(PHILOSOPHES_2) \
	$(PHILOSOPHES_3) \
	$(PRODUCTEURS_CONSOMMATEURS_1) \
	$(PRODUCTEURS_CONSOMMATEURS_2) \
	$(PRODUCTEURS_CONSOMMATEURS_3) \
	$(READERS_WRITERS_1) \
	$(READERS_WRITERS_2) \
	$(READERS_WRITERS_3) \
	$(LOCK_TEST_1) \
	$(LOCK_TEST_2) \
	$(SEMAPHORE_TEST)

$(PHILOSOPHES_1): $(PHILOSOPHES_MAIN) $(UTILS_POSIX) | $(BIN)
	$(CC) $(FLAGS) -o $@ $(PHILOSOPHES_MAIN) $(UTILS_POSIX)

$(PHILOSOPHES_2): $(PHILOSOPHES_MAIN) $(UTILS_TEST_AND_SET) | $(BIN)
	$(CC) $(FLAGS) -o $@ $(PHILOSOPHES_MAIN) $(LOCK_OBJ_1) $(UTILS_TEST_AND_SET)

$(PHILOSOPHES_3): $(PHILOSOPHES_MAIN) $(UTILS_TEST_AND_TEST_AND_SET) | $(BIN)
	$(CC) $(FLAGS) -o $@ $(PHILOSOPHES_MAIN) $(UTILS_TEST_AND_TEST_AND_SET)

$(PRODUCTEURS_CONSOMMATEURS_1): $(PRODUCTEURS_CONSOMMATEURS_MAIN) $(UTILS_POSIX) | $(BIN)
	$(CC) $(FLAGS) -o $@ $(PRODUCTEURS_CONSOMMATEURS_MAIN) $(UTILS_POSIX)

$(PRODUCTEURS_CONSOMMATEURS_2): $(PRODUCTEURS_CONSOMMATEURS_MAIN) $(UTILS_TEST_AND_SET) | $(BIN)
	$(CC) $(FLAGS) -o $@ $(PRODUCTEURS_CONSOMMATEURS_MAIN) $(UTILS_TEST_AND_SET)

$(PRODUCTEURS_CONSOMMATEURS_3): $(PRODUCTEURS_CONSOMMATEURS_MAIN) $(UTILS_TEST_AND_TEST_AND_SET) | $(BIN)
	$(CC) $(FLAGS) -o $@ $(PRODUCTEURS_CONSOMMATEURS_MAIN) $(UTILS_TEST_AND_TEST_AND_SET)

$(READERS_WRITERS_1): $(READERS_WRITERS_MAIN) $(UTILS_POSIX) | $(BIN)
	$(CC) $(FLAGS) -o $@ $(READERS_WRITERS_MAIN) $(UTILS_POSIX)

$(READERS_WRITERS_2): $(READERS_WRITERS_MAIN) $(UTILS_TEST_AND_SET) | $(BIN)
	$(CC) $(FLAGS) -o $@ $(READERS_WRITERS_MAIN) $(UTILS_TEST_AND_SET)

$(READERS_WRITERS_3): $(READERS_WRITERS_MAIN) $(UTILS_TEST_AND_TEST_AND_SET) | $(BIN)
	$(CC) $(FLAGS) -o $@ $(READERS_WRITERS_MAIN) $(UTILS_TEST_AND_TEST_AND_SET)

$(LOCK_TEST_1): $(LOCK_TEST_MAIN) $(UTILS_TEST_AND_SET)| $(BIN)
	$(CC) $(FLAGS) -o $@ $(LOCK_TEST_MAIN) $(UTILS_TEST_AND_SET)

$(LOCK_TEST_2): $(LOCK_TEST_MAIN) $(UTILS_TEST_AND_TEST_AND_SET) | $(BIN)
	$(CC) $(FLAGS) -o $@ $(LOCK_TEST_MAIN) $(UTILS_TEST_AND_TEST_AND_SET)

$(SEMAPHORE_TEST): $(SEMAPHORE_TEST_MAIN) $(UTILS_TEST_AND_TEST_AND_SET) | $(BIN)
	$(CC) $(FLAGS) -o $@ $(SEMAPHORE_TEST_MAIN) $(UTILS_TEST_AND_TEST_AND_SET)

$(BIN):
	mkdir $@

%.o: %.c
	$(CC) $(FLAGS) -c -o $@ $^

benchmark: FRC
	@./benchmark/run-all.sh

benchmark-post:
	@./benchmark/run-all_post_processor.sh

FRC:

clean:
	@$(RM) -rv $(BIN)
	@find . -path ./venv -prune -o -type f -name '*.o' -exec rm -v {} \;
	@./benchmark/clean.sh

.PHONY = $(PHONY)
